/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itson.bdavanzadas.GUI;

import java.awt.BorderLayout;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.itson.bdavanzadas.proyecto.conexion.Conexion;
import org.itson.bdavanzadas.proyecto.excepciones.PersistenciaException;
import org.itson.bdavanzadas.proyectodominio.Cliente;

/**
 * Clase que representa la ventana de historial de operaciones para un cliente. Permite visualizar las operaciones realizadas por el cliente.
 *
 * @author Eduardo Talavera Ramos | 00000245244
 * @author Angel Huerta Amparán | 00000245345
 */
public class HistorialOperacionesFrame extends javax.swing.JFrame {

    // Cliente asociado a esta ventana de historial de operaciones
    private Cliente cliente;

    // Componentes de la interfaz gráfica
    private JPanel panelTablaOperaciones;
    private JTable tableOperaciones;
    private JScrollPane scrollPaneOperaciones;

    // Logger para registrar eventos y mensajes
    static final Logger logger = Logger.getLogger(Conexion.class.getName());

    // Estado para controlar si la tabla de operaciones está desplegada o no
    private boolean estadoDesplegado = false;

    /**
     * Constructor que inicializa la ventana de historial de operaciones para un cliente. Crea los componentes de la interfaz gráfica y agrega la tabla de operaciones al panel.
     *
     * @param cliente Objeto Cliente asociado a esta ventana.
     */
    public HistorialOperacionesFrame(Cliente cliente) {
        initComponents();
        this.cliente = cliente;

        // Inicialización de componentes gráficos
        panelTablaOperaciones = new JPanel();
        tableOperaciones = new JTable();
        scrollPaneOperaciones = new JScrollPane();

        // Agrega el panel de la tabla de operaciones a la ventana
        this.add(panelTablaOperaciones);
        panelTablaOperaciones.setBounds(10, 320, 780, 150);

        // Agrega la tabla de operaciones al panel
        agregarTablaOperacionesPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JButton();
        btnUsuario = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtEditarPerfil = new javax.swing.JButton();
        txtCerrarSesion = new javax.swing.JButton();
        cmbOperaciones = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtFechaFinal = new com.toedter.calendar.JDateChooser();
        txtFechaInicio = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/vbankchico.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 17, 123, -1));

        btnHistorial.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnHistorial.setForeground(new java.awt.Color(42, 98, 143));
        btnHistorial.setText("Historial");
        btnHistorial.setBorderPainted(false);
        btnHistorial.setBackground(null);
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });
        jPanel1.add(btnHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 41, -1, -1));

        btnUsuario.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnUsuario.setForeground(new java.awt.Color(42, 98, 143));
        btnUsuario.setText("Usuario");
        btnUsuario.setBorderPainted(false);
        btnUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUsuario.setBackground(null);
        btnUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUsuarioMouseClicked(evt);
            }
        });
        btnUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(btnUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 40, 110, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/usuarioIcono.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, -1, 44));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/historialIcono.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 34, -1, -1));

        jLabel5.setBackground(new java.awt.Color(102, 102, 102));
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("______________________________________________________________________________________________________________________________________________");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 76, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(42, 98, 143));
        jLabel6.setText("Flitrar por tipo de operación");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 163, -1, 37));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel7.setText("Historial de operaciones");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, 37));

        btnBuscar.setBackground(new java.awt.Color(42, 98, 143));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 144, 30));

        txtEditarPerfil.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEditarPerfil.setForeground(new java.awt.Color(42, 98, 143));
        txtEditarPerfil.setText("   ");
        txtEditarPerfil.setBorder(null);
        txtEditarPerfil.setBorderPainted(false);
        txtEditarPerfil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtEditarPerfil.setBackground(null);
        txtEditarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditarPerfilActionPerformed(evt);
            }
        });
        jPanel1.add(txtEditarPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 112, 15));

        txtCerrarSesion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtCerrarSesion.setForeground(new java.awt.Color(42, 98, 143));
        txtCerrarSesion.setText("   ");
        txtCerrarSesion.setBorder(null);
        txtCerrarSesion.setBorderPainted(false);
        txtCerrarSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCerrarSesion.setBackground(null);
        txtCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCerrarSesionActionPerformed(evt);
            }
        });
        jPanel1.add(txtCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, 112, 15));

        cmbOperaciones.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        cmbOperaciones.setForeground(new java.awt.Color(42, 98, 143));
        cmbOperaciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Transferencia", "Retiro sin cuenta" }));
        cmbOperaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOperacionesActionPerformed(evt);
            }
        });
        jPanel1.add(cmbOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 166, 234, 29));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(42, 98, 143));
        jLabel9.setText("Flitrar por fecha");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 218, -1, 37));

        txtFechaFinal.setDateFormatString("y-MM-dd");
        jPanel1.add(txtFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 129, -1));

        txtFechaInicio.setDateFormatString("y-MM-dd");
        jPanel1.add(txtFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 129, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/flecha.JPG"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 503, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHistorialActionPerformed

    private void btnUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUsuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuarioMouseClicked

    /**
     * Maneja el evento de clic en el botón de usuario. Despliega o oculta opciones de usuario. Si no está desplegado, muestra opciones; de lo contrario, oculta el texto de las opciones.
     */
    private void btnUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioActionPerformed
        if (!estadoDesplegado) {
            txtEditarPerfil.setText("* Editar perfil");
            txtCerrarSesion.setText("* Cerrar sesión");
        } else {
            // Si ya está desplegado, oculta el texto
            txtEditarPerfil.setText("");
            txtCerrarSesion.setText("");
        }

        // Cambia el estado
        estadoDesplegado = !estadoDesplegado;
    }//GEN-LAST:event_btnUsuarioActionPerformed

    /**
     * Consulta las operaciones según los parámetros seleccionados (tipo, fecha de inicio y fecha final). Llena la tabla de operaciones con los resultados obtenidos de la base de datos.
     *
     * @throws PersistenciaException Si hay un error al realizar la consulta en la base de datos.
     */
    public void consultarOperaciones() throws PersistenciaException {
        // Lista para almacenar los resultados de la consulta.
        List<Object[]> dataList = new ArrayList<>();

        // Nombres de las columnas de la tabla de operaciones.
        String[] nombresColumnas = {"Fecha Hora", "Monto", "Tipo", "Cuenta Origen", "Cuenta Destino"};

        // Formato de fecha para convertir las fechas seleccionadas.
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

        // Sentencia SQL para llamar al procedimiento almacenado GetOperaciones.
        String sentenciaSQL = "CALL GetOperaciones(?, ?, ?, ?);";

        try (
                // Establece la conexión y prepara la llamada al procedimiento almacenado.
                Connection conexion = Banco.conexion.obtenerConexion(); CallableStatement comando = conexion.prepareCall(sentenciaSQL);) {
            // Configuración de parámetros para el procedimiento almacenado.
            comando.setString(1, cmbOperaciones.getSelectedItem().toString());

            // Configuración de fecha de inicio.
            if (txtFechaInicio.getDate() != null) {
                Date fechaInicio = txtFechaInicio.getDate();
                String fechaFormInicio = formato.format(fechaInicio);
                comando.setString(2, fechaFormInicio);
            } else {
                comando.setNull(2, Types.VARCHAR);
            }

            // Configuración de fecha final.
            if (txtFechaFinal.getDate() != null) {
                Date fechaFinal = txtFechaFinal.getDate();
                String fechaFormFinal = formato.format(fechaFinal);
                comando.setString(3, fechaFormFinal);
            } else {
                comando.setNull(3, Types.VARCHAR);
            }

            // Seteo del id del cliente en el cuarto parámetro.
            comando.setInt(4, cliente.getIdCliente());

            // Ejecución de la consulta y procesamiento de resultados.
            try (ResultSet resultados = comando.executeQuery()) {
                while (resultados.next()) {
                    LocalDateTime fechaHora = resultados.getTimestamp("fechaHora").toLocalDateTime();
                    float monto = resultados.getFloat("monto");
                    String tipo = resultados.getString("tipo");
                    int cuentaOrigen = resultados.getInt("cuentaOrigen");
                    Integer cuentaDestino = resultados.wasNull() ? null : resultados.getInt("cuentaDestino");

                    // Agrega los resultados a la lista.
                    dataList.add(new Object[]{fechaHora, monto, tipo, cuentaOrigen, cuentaDestino});
                }
            }

            // Convierte la lista de resultados a un array bidimensional.
            Object[][] data = dataList.toArray(new Object[0][]);

            // Crea y establece el modelo de la tabla de operaciones.
            DefaultTableModel tableModel = new DefaultTableModel(data, nombresColumnas);
            tableOperaciones.setModel(tableModel);

        } catch (SQLException ex) {
            // Manejo de excepciones y registro de errores.
            logger.log(Level.SEVERE, "No se pudo consultar la tabla de operaciones", ex);
            throw new PersistenciaException("No se pudo consultar la tabla de operaciones", ex);
        }
    }

    /**
     * Agrega la tabla de operaciones al panel correspondiente en la interfaz gráfica.
     */
    private void agregarTablaOperacionesPanel() {
        tableOperaciones = new JTable();
        scrollPaneOperaciones = new JScrollPane(tableOperaciones);
        panelTablaOperaciones.setLayout(new BorderLayout());
        panelTablaOperaciones.add(scrollPaneOperaciones, BorderLayout.CENTER);
    }

    /**
     * Maneja el evento de clic en el botón de búsqueda. Realiza la consulta de operaciones y actualiza la interfaz gráfica.
     *
     * @param evt Evento de clic en el botón de búsqueda.
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            consultarOperaciones();
        } catch (PersistenciaException ex) {
            Logger.getLogger(HistorialOperacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        panelTablaOperaciones.revalidate();
        panelTablaOperaciones.repaint();


    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Maneja el evento de cierre de sesión. Muestra un mensaje de notificación y abre la ventana de inicio de sesión.
     *
     * @param evt Evento de acción que desencadena el cierre de sesión.
     */
    private void txtCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCerrarSesionActionPerformed
        JOptionPane.showMessageDialog(this, "Se ha cerrado sesión correctamente.", "Notificación", JOptionPane.INFORMATION_MESSAGE);
        IniciarSesionFrame iniciarSesion = new IniciarSesionFrame();
        iniciarSesion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_txtCerrarSesionActionPerformed

    private void cmbOperacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOperacionesActionPerformed

    }//GEN-LAST:event_cmbOperacionesActionPerformed

    /**
     * Maneja el evento de edición de perfil. Abre la ventana de actualización de usuario para permitir la edición del perfil del cliente actual.
     *
     * @param evt Evento de acción que desencadena la edición del perfil.
     */
    private void txtEditarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditarPerfilActionPerformed
        ActualizarUsuarioFrame editarPerfil = new ActualizarUsuarioFrame(cliente);
        editarPerfil.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_txtEditarPerfilActionPerformed

    /**
     * Maneja el evento de clic en el componente JLabel8. Abre la ventana del menú de cuenta, permitiendo al usuario acceder a las funciones relacionadas con su cuenta.
     *
     * @param evt Evento de ratón que desencadena la apertura del menú de cuenta.
     */
    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        MenuCuentaFrame menuCuenta = null;
        try {
            menuCuenta = new MenuCuentaFrame(this.cliente);
        } catch (PersistenciaException ex) {
            Logger.getLogger(HistorialOperacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        menuCuenta.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnUsuario;
    private javax.swing.JComboBox<String> cmbOperaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton txtCerrarSesion;
    private javax.swing.JButton txtEditarPerfil;
    private com.toedter.calendar.JDateChooser txtFechaFinal;
    private com.toedter.calendar.JDateChooser txtFechaInicio;
    // End of variables declaration//GEN-END:variables
}
